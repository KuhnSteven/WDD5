{"version":3,"sources":["components/Nav.js","components/Header.js","pages/Pg1.js","pages/Pg2.js","pages/Pg3.js","components/Main.js","components/Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","NavLink","to","Component","Header","className","components_Nav","Pg1","state","picofDay","_this2","this","picofDayAPI","concat","fetch","then","res","json","console","log","setState","copyright","date","explanation","hdurl","media_type","title","src","url","alt","Pg2","cameraGallery","cameraInfo","cameraGalleryAPI","photos","camera","earth_date","full_name","img_src","Pg3","spaceWeather","marsWeatherAPI","catalog","halfAngle","latitude","logitude","speed","type","time21_5","Main","Route","exact","path","component","Footer","index_esm","App","HashRouter","basename","components_Header","components_Main","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.133e6db1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {NavLink} from 'react-router-dom'\n\nclass Nav extends Component {\n  render() {\n    return (\n      <nav>\n        <NavLink to=\"/Pg1\">Pic of Day</NavLink>\n        <NavLink to=\"/Pg2\">Camera Gallery</NavLink>\n        <NavLink to=\"/Pg3\">Space Weather</NavLink>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport Nav from './Nav'\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"myHeader\">\n      <h3>Title</h3>\n      <Nav />\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, {\n  Component\n} from 'react';\nimport '../App.css';\n\nclass Pg1 extends Component {\n  state = {\n    picofDay: [],\n  };\n\n\n  componentDidMount() {\n    //Photo of the day\n    const apiKey = `E6Ia87NnQyeFUYuqZqKTf9DzLO3WYlGcbmppB1uy`\n    const picofDayAPI = `https://api.nasa.gov/planetary/apod?api_key=${apiKey}`;\n    fetch(picofDayAPI)\n      .then(res => res.json())\n      .then(picofDay => {\n        console.log(picofDay);\n        this.setState({\n          picofDay: picofDay\n        });\n      });\n  }\n\n\n\n  render() {\n    return ( <section >\n      <p>{this.state.picofDay.copyright}</p>\n      <p>{this.state.picofDay.date}</p>\n      <p>{this.state.picofDay.explanation}</p>\n      <p>{this.state.picofDay.hdurl}</p>\n      <p>{this.state.picofDay.media_type}</p>\n      <p>{this.state.picofDay.title}</p>\n      <img src={this.state.picofDay.url} alt={this.state.picofDay.title} />\n      </section>\n    );\n  }\n}\n\nexport default Pg1;","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Pg2 extends Component {\n  state = {\n    cameraGallery: [],\n    cameraInfo: []\n  }\n  componentDidMount(){\n        //Camera Gallery\n        const apiKey = `E6Ia87NnQyeFUYuqZqKTf9DzLO3WYlGcbmppB1uy`\n        const cameras = [\"fhaz\", \"rhaz\", \"mast\", \"chemcam\", \"mahli\", \"mardi\", \"navcam\", \"pancam\", \"minites\"];\n        const cameraGalleryAPI = `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=1000&camera=${cameras[0]}&api_key=${apiKey}`;\n        fetch(cameraGalleryAPI)\n          .then(res => res.json())\n          .then(cameraGallery => {\n            console.log(cameraGallery.photos);\n            this.setState({\n              cameraGallery: cameraGallery.photos[0],\n              cameraInfo: cameraGallery.photos[0].camera\n            });\n          });\n  }\n  render() {\n    return (\n      <section>\n        <p>{this.state.cameraGallery.earth_date}</p>\n        <p>{this.state.cameraInfo.full_name}</p>\n        <img src={this.state.cameraGallery.img_src} alt=\"img\" />\n      </section>\n    );\n  }\n}\n\nexport default Pg2;\n","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Pg3 extends Component {\n  state = {\n    spaceWeather: []\n  }\n  componentDidMount(){\n    //Space Weather Activty\n    const apiKey = `E6Ia87NnQyeFUYuqZqKTf9DzLO3WYlGcbmppB1uy`\n    const spaceWeatherArray = [\"CME\", \"CMEAnalysis\", \"GST\", \"IPS\", \"FLR\", \"SEP\", \"MPC\", \"RBE\", \"HSS\", \"WSAEnlilSimulation\", \"notifications\"];\n    const marsWeatherAPI = `https://api.nasa.gov/DONKI/${spaceWeatherArray[1]}?startDate=2014-05-01&endDate=2014-05-08&type=all&api_key=${apiKey}`;\n    fetch(marsWeatherAPI)\n      .then(res => res.json())\n      .then(spaceWeather => {\n        console.log(spaceWeather[0]);\n        this.setState({\n          spaceWeather: spaceWeather[0]\n        });\n      });\n    }\n  render() {\n    return (\n      <section>\n        <p>{this.state.spaceWeather.catalog}</p>\n        <p>{this.state.spaceWeather.halfAngle}</p>\n        <p>{this.state.spaceWeather.latitude}</p>\n        <p>{this.state.spaceWeather.logitude}</p>\n        <p>{this.state.spaceWeather.speed}</p>\n        <p>{this.state.spaceWeather.type}</p>\n        <p>{this.state.spaceWeather.time21_5}</p>\n      </section>\n    );\n  }\n}\n\nexport default Pg3;\n","import React, { Component } from 'react';\nimport {Route} from 'react-router-dom'\n\nimport Pg1 from '../pages/Pg1'\nimport Pg2 from '../pages/Pg2'\nimport Pg3 from '../pages/Pg3'\n\nclass Main extends Component {\n  render() {\n    return (\n      <section>\n        <Route exact path='/' component={Pg1} />\n        <Route exact path='/Pg1' component={Pg1} />\n        <Route exact path='/Pg2' component={Pg2} />\n        <Route exact path='/Pg3' component={Pg3} />\n      </section>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {FaHome} from 'react-icons/fa'\nimport {FaHandPeace} from 'react-icons/fa'\nimport {FaGithubAlt} from 'react-icons/fa'\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <NavLink to=\"/Pg1\"><FaHome /></NavLink>\n        <NavLink to=\"/Pg2\"><FaHandPeace /></NavLink>   \n        <NavLink to=\"/Pg3\"><FaGithubAlt /></NavLink>    \n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport {HashRouter as Router} from 'react-router-dom'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename='/'>\n        <div>\n          <Header />\n          <Main />\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}